version: "3"

volumes:
    prometheus_data: {}

services:
  app:
    build: .
    container_name: exam_app
    restart: on-failure
    ports:
      - 5001:5001
    environment:
      redis_url: "redis://:${REDIS_PASSWORD}@${REDIS_IP}:6379"
    expose:
      - 5001
    networks:
      exam_net:
        ipv4_address: 172.28.1.3
  redis:
    image: redis:latest
    container_name: exam_redis
    ports:
      - 6379:6379
    volumes:
      - ./config/redis.conf:/redis.conf
      - ./redis-data:/var/lib/redis
    healthcheck:
      test: "redis-cli -h ${REDIS_IP} -p 6379 -a ${REDIS_PASSWORD} ping"
      interval: 1s
      timeout: 3s
      retries: 30
    command: ["redis-server", "/redis.conf", "--requirepass ${REDIS_PASSWORD}"]
    networks:
      exam_net:
        ipv4_address: ${REDIS_IP}
  prometheus:
    image: prom/prometheus:v2.32.1
    container_name: exam_prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    expose:
      - 9090
    networks:
      exam_net:
        ipv4_address: ${PROMETHEUS_IP}
    restart: always
    healthcheck:
      test: "/bin/wget -q -Y off http://localhost:9090/status -O /dev/null > /dev/null 2>&1"
      interval: 25s
      timeout: 3s
      start_period: 60s
  #   depends_on:
  #   - cadvisor
  # cadvisor:
  #   image: gcr.io/google-containers/cadvisor:latest
  #   container_name: cadvisor
  #   ports:
  #   - 8080:8080
  #   volumes:
  #   - /:/rootfs:ro
  #   - /var/run:/var/run:rw
  #   - /sys:/sys:ro
  #   - /var/lib/docker/:/var/lib/docker:ro
  #   depends_on:
  #   - redis
# networking for the Redis container
networks:
  exam_net:
    ipam:
      driver: default
      config:
        - subnet: ${SUBNET}


